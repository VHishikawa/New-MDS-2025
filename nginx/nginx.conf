# nginx/nginx.conf - VERSÃO CORRIGIDA COM MAP (MAIS SEGURA E ESTÁVEL)

worker_processes auto;

events {
    worker_connections 2048;
}

http {
    # --- CONFIGURAÇÕES GLOBAIS DE PROXY ---
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_connect_timeout 90s;
    proxy_read_timeout 90s;
    client_max_body_size 1G;
    
    resolver 127.0.0.11 valid=30s;

    # ========================================================================
    # [NOVO] MAPA PARA ROTEAMENTO CONDICIONAL
    # Esta é a forma correta de rotear requisições baseadas no referer.
    # Ele cria uma variável $target_backend que aponta para o serviço correto.
    # É mais seguro e performático que usar múltiplos 'if'.
    # ========================================================================
    map $http_referer $target_backend {
        # Se a requisição veio de /openmetadata/, o alvo é o OpenMetadata.
        ~*/openmetadata/    http://openmetadata-server:8585;

        # Se a requisição veio de /dbeaver/, o alvo é o DBeaver.
        ~*/dbeaver/         http://dbeaver_ui:8978;
        
        # Adicione outros serviços que precisam de bypass aqui.
        # Ex: ~*/meu-outro-app/ http://meu-outro-app:8000;

        # O padrão é não ter alvo.
        default             "";
    }

    server {
        listen 80;
        server_name mds-server.local;

        # =========================================================
        # SERVIÇOS QUE JÁ ESTÃO 100% FUNCIONAIS (INTOCADOS)
        # =========================================================
        location /airflow/ { proxy_pass http://airflow_webserver:8080; }
        location /jenkins/ { proxy_pass http://jenkins_ci_cd:8080; }
        location /prometheus/ { proxy_pass http://prometheus:9090; }
        location /grafana/ { rewrite ^/grafana$ /grafana/ permanent; proxy_pass http://grafana:3000; }
        location /n8n/ { rewrite ^/n8n/(.*) /$1 break; proxy_pass http://n8n:5678/; }
        location /jupyter/ { proxy_pass http://notebook-spark:8888; }
        location /flink/ { rewrite ^/flink/(.*) /$1 break; proxy_pass http://flink-jobmanager:8081/; }
        location /minio/ { rewrite ^/minio/(.*) /$1 break; proxy_pass http://minio_storage:9001/; }
        location /clickhouse/ { rewrite ^/clickhouse/(.*) /$1 break; proxy_pass http://clickhouse_server:8123/; }
        location /pinot/ { rewrite ^/pinot/(.*) /$1 break; proxy_pass http://pinot-controller:9000/; }
        location /spark/ { proxy_pass http://spark-master:8080; }
        location /neo4j/ { proxy_redirect http://mds-server.local/ /neo4j/; rewrite ^/neo4j/(.*) /$1 break; proxy_pass http://neo4j_db:7474/; }
        location /control-center/ { rewrite ^/control-center/(.*) /$1 break; proxy_pass http://kafka_control_center:9021/; }
        location /trino/ { rewrite ^/trino/(.*) /$1 break; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; proxy_set_header X-Forwarded-Host $host; proxy_set_header X-Forwarded-Port $server_port; proxy_pass http://trino-coordinator:8080/; }
        location /hiveserver/ { rewrite ^/hiveserver/(.*) /$1 break; proxy_pass http://hive-server:10002/; }
        location /nifi/ { proxy_pass http://nifi:8080; }
        location /kibana/ { proxy_pass http://kibana:5601; }
        location /superset/ { proxy_pass http://superset_app:8088/; }

        # =========================================================
        # BLOCOS PRINCIPAIS DAS APLICAÇÕES COM BYPASS
        # =========================================================

        location /dbeaver/ {
            rewrite ^/dbeaver/(.*) /$1 break;
            proxy_pass http://dbeaver_ui:8978/;
        }

        # [CORRIGIDO] Bloco principal do OpenMetadata
        location /openmetadata/ {
            proxy_pass http://openmetadata-server:8585/;
        }

        # =========================================================
        # BLOCOS DE BYPASS GLOBAIS (USANDO O MAP)
        # Estes blocos capturam requisições na raiz (ex: /api) e as
        # roteiam para o backend correto definido no `map` acima.
        # =========================================================

        location /api/ {
            # Se o $target_backend não estiver vazio (foi definido no map)...
            if ($target_backend) {
                # ...passa a requisição para ele.
                proxy_pass $target_backend;
            }
        }

        location /icons/ {
            if ($target_backend) {
                proxy_pass $target_backend;
            }
        }
        
        location /images/ {
            if ($target_backend) {
                proxy_pass $target_backend;
            }
        }
        
        location /favicons/ {
            if ($target_backend) {
                proxy_pass $target_backend;
            }
        }

        # Este bloco de regex agora é mais específico para arquivos na raiz,
        # para evitar conflitos com /static/ de outros apps.
        location ~ ^/[^/]+\.(js|css|json)$ {
            if ($target_backend) {
                proxy_pass $target_backend;
            }
        }

        # =========================================================
        # Bloco /static/ original preservado para Spark e Superset
        # Ele é avaliado antes do regex acima, garantindo que funcione.
        # =========================================================
        location /static/ {
            if ($http_referer ~* /superset/) {
                proxy_pass http://superset_app:8088;
            }
            if ($http_referer ~* /spark/) {
                proxy_pass http://spark-master:8080;
            }
        }
    }
}